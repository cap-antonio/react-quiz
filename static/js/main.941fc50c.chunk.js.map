{"version":3,"sources":["Components/Navigation/Drawer/Drawer.module.css","Components/FinishedQuiz/FinishedQuiz.module.css","Components/Navigation/MenuToggle/MenuToggle.module.css","Containers/Quiz/Quiz.module.css","Components/ActiveQuiz/ActiveQuiz.module.css","Components/ActiveQuiz/AnswerList/AnswerItem/AnswerItem.module.css","Components/UI/Button/Button.module.css","Components/UI/Loader/Loader.module.css","Components/UI/Input/Input.module.css","Components/UI/Select/Select.module.css","Containers/Auth/Auth.module.css","hoc/Layout/Layout.module.css","Components/UI/BackDrop/BackDrop.module.css","Components/ActiveQuiz/AnswerList/AnswerList.module.css","Containers/QuizCreator/QuizCreator.module.css","Containers/QuizList/QuizList.module.css","Components/Navigation/MenuToggle/MenuToggle.js","Components/UI/BackDrop/BackDrop.js","Components/Navigation/Drawer/Drawer.js","hoc/Layout/layout.js","Components/ActiveQuiz/AnswerList/AnswerItem/AnswerItem.js","Components/ActiveQuiz/AnswerList/AnswerList.js","Components/ActiveQuiz/ActiveQuiz.js","Components/UI/Button/Button.js","Components/FinishedQuiz/FinishedQuiz.js","Components/UI/Loader/Loader.js","Axios/Axios-quiz.js","Store/Actions/QuizActionCreators.js","Store/Actions/ActionTypes.js","Containers/Quiz/Quiz.js","Form/FormFrameWork.js","Components/UI/Input/Input.js","Components/UI/Select/Select.js","Containers/QuizCreator/QuizCreator.js","Store/Actions/QuizCreatorActionCreator.js","Containers/QuizList/QuizList.js","Store/Actions/AuthActionCreator.js","Containers/Auth/Auth.js","Components/Logout/Logout.js","App.js","serviceWorker.js","Store/Reducers/QuizReducer.js","Store/Reducers/QuizCreatorReducer.js","Store/Reducers/AuthReducer.js","Store/Reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","Drawer","links","map","link","index","key","to","exact","activeClassName","active","onClose","label","this","close","isAutheticated","Fragment","renderLinks","React","Component","Layout","state","menu","toggelMenuHandler","setState","MenuCloseHandler","children","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswerList","answers","ActiveQuiz","Question","question","answerNumber","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","error","success","length","onRetry","Loader","center","axios","create","baseURL","fetchQuizSuccess","fetchQuizesSuccess","quizes","fetchQuizesError","e","quizSetState","answerState","questionSwitcher","dispatch","timeout","window","setTimeout","activeQuestion","isQuizFinished","activeQuestionNumber","clearTimeout","Quiz","fetchQuizById","match","params","retryQuiz","QuizWrapper","loading","isFinished","quizAnswerClick","quizId","a","async","Axios","get","response","data","answerId","getState","correctAnswerId","createControl","config","validation","valid","touched","value","validate","isValid","required","trim","validateForm","formControls","isFormValid","forEach","name","Input","isInvalid","shouldValidate","inputType","htmlFor","Math","random","invalid","autoComplete","onChange","errorMessage","Select","options","option","QuestionList","questionItem","createOptionControl","number","createFormControls","option1","option2","option3","option4","QuizCreator","submitHandler","event","preventDefault","addQuestionHandler","createQuizQuestion","createQuizHandler","finishCreateQuiz","onChangeHandler","formItem","form","selectChangeHandler","target","onEraseHandler","resetQuizCreation","inputItem","control","onSubmit","submitHandle","renderInputs","questionButtonLabel","quizCreator","item","post","QuizList","fetchQuizes","renderQuizes","authSuccess","logout","localStorage","removeItem","autoLogout","time","Auth","email","password","minLength","validateControl","loginHandler","registerHandler","test","String","toLowerCase","AuthForm","isLogin","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","Logout","App","autoLogin","routes","path","component","withRouter","getItem","Boolean","location","hostname","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.941fc50c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__33sDp\",\"close\":\"Drawer_close__qtjVU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__24knh\",\"success\":\"FinishedQuiz_success__tWyTO\",\"error\":\"FinishedQuiz_error__1EERt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__2vewb\",\"open\":\"MenuToggle_open__33337\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__fpuQE\",\"QuizWrapper\":\"Quiz_QuizWrapper__ByeWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__1Geuu\",\"Question\":\"ActiveQuiz_Question__QHlu8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__3ec_J\",\"success\":\"AnswerItem_success__2D4sD\",\"error\":\"AnswerItem_error__3MBAJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__35PjG\",\"error\":\"Button_error__EWlfU\",\"success\":\"Button_success__3zrQR\",\"primary\":\"Button_primary__24fVy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Loader_center__1Uqu4\",\"Loader\":\"Loader_Loader__272gS\",\"lds-ripple\":\"Loader_lds-ripple__38Je_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__8Q5CT\",\"invalid\":\"Input_invalid__1fbkd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__HixJs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1E_MY\",\"AuthForm\":\"Auth_AuthForm__fwgXW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__1w3XB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"BackDrop_Backdrop__2MDzi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerList\":\"AnswerList_AnswerList__1RypS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__3fHq9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__3ZOrt\"};","import React from 'react'\r\nimport classes from './MenuToggle.module.css'\r\n\r\nconst MenuToggle = (props) => {\r\n    const cls = [classes.MenuToggle,\r\n    'fa'\r\n    ]\r\n    if (props.isOpen) {\r\n        cls.push('fa-times')\r\n        cls.push(classes.open)\r\n    }\r\n    else {\r\n        cls.push('fa-bars')\r\n    }\r\n    return (\r\n        <i className = { cls.join(' ')} onClick = { props.onToggle } />\r\n    )\r\n}\r\n\r\nexport default MenuToggle","import React from 'react'\r\nimport classes from './BackDrop.module.css'\r\n\r\nconst Backdrop = (props) => <div className = { classes.Backdrop } onClick = { props.onClick } />\r\n\r\nexport default Backdrop","import React from 'react'\r\nimport classes from './Drawer.module.css'\r\nimport Backdrop from '../../UI/BackDrop/BackDrop'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nclass Drawer extends React.Component {\r\n    renderLinks(links) {\r\n        return links.map((link, index) => {\r\n            return <li key={index}>\r\n                <NavLink to = {link.to} \r\n                    exact = {link.exact}\r\n                    activeClassName = {classes.active} \r\n                    onClick = {this.props.onClose} >{link.label}</NavLink>\r\n            </li>\r\n        })\r\n    }\r\n    render() {\r\n        const cls = [classes.Drawer]\r\n\r\n        if (!this.props.isOpen) {\r\n            cls.push(classes.close)\r\n        }\r\n        const links = [\r\n            {to: '/', label: 'List of Tests', exact: true},\r\n        ]\r\n        if (this.props.isAutheticated) {\r\n            links.push({to: '/quiz-creator', label: 'Create a Test', exact: true})\r\n            links.push({to: '/logout', label: 'Logout', exact: true})\r\n        } else {\r\n            links.push({to: '/auth', label: 'Authentication', exact: false})\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <nav className={cls.join(' ')}>\r\n                    <ul>\r\n                        {this.renderLinks(links)}\r\n                    </ul>\r\n\r\n                </nav>\r\n                {this.props.isOpen ? <Backdrop onClick = {this.props.onClose} /> : null }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Drawer","import React from 'react'\r\nimport classes from './Layout.module.css'\r\nimport MenuToggle from '../../Components/Navigation/MenuToggle/MenuToggle'\r\nimport Drawer from '../../Components/Navigation/Drawer/Drawer'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Layout extends React.Component {\r\n    state = {\r\n        menu: false\r\n    }\r\n    toggelMenuHandler = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n    MenuCloseHandler = () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n    render () {\r\n        return (\r\n            <div className = {classes.Layout}>\r\n                <Drawer isOpen = { this.state.menu } onClose = { this.MenuCloseHandler }\r\n                    isAutheticated={ this.props.isAutheticated }/>\r\n                <MenuToggle onToggle = { this.toggelMenuHandler } \r\n                    isOpen = { this.state.menu }\r\n                    />\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAutheticated: !!state.auth.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Layout)","import React from 'react'\r\nimport classes from './AnswerItem.module.css'\r\n\r\nconst AnswerItem = (props) => {\r\n    const cls = [classes.AnswerItem]\r\n    if(props.state) {\r\n        cls.push(classes[props.state])\r\n    }\r\n    return (\r\n        <li className = { cls.join(' ') }\r\n            onClick = { () => props.onAnswerClick(props.answer.id)}>\r\n            { props.answer.text }\r\n        </li>\r\n    )\r\n} \r\n\r\nexport default AnswerItem","import React from 'react'\r\nimport classes from './AnswerList.module.css'\r\nimport AnswerItem from './AnswerItem/AnswerItem'\r\n\r\nconst AnswerList = (props) => {\r\n    return (\r\n    <ul className = { classes.AnswerList }>\r\n        { props.answers.map((answer, index) => {\r\n            return (\r\n                <AnswerItem key = { index } answer = { answer } \r\n                    onAnswerClick = { props.onAnswerClick }\r\n                    state = { props.state ? props.state[answer.id] : null } />\r\n            )\r\n        }) }\r\n    </ul>\r\n    )}\r\n \r\nexport default AnswerList","import React from 'react'\r\nimport classes from './ActiveQuiz.module.css'\r\nimport AnswerList from './AnswerList/AnswerList'\r\n\r\nconst ActiveQuiz = (props) => (\r\n    <div className = { classes.ActiveQuiz }>\r\n        <h1>Do you know?</h1>\r\n        <p className = { classes.Question }>\r\n            <span>\r\n                <strong>1.</strong>&nbsp;\r\n                { props.question }\r\n            </span>\r\n            <small>{ props.answerNumber } of { props.quizLength }</small>\r\n        </p>\r\n        <AnswerList\r\n            answers = { props.answers }\r\n            onAnswerClick = { props.onAnswerClick } \r\n            state = { props.state } />\r\n    </div>\r\n)\r\n\r\nexport default ActiveQuiz","import React from 'react'\r\nimport classes from './Button.module.css'\r\n\r\nconst Button = (props) => {\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ]\r\n    return (\r\n        <button \r\n            onClick = {props.onClick}\r\n            className = {cls.join(' ')}\r\n            disabled = {props.disabled} >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport classes from './FinishedQuiz.module.css'\r\nimport Button from '../UI/Button/Button'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst FinishedQuiz = (props) => {\r\n    const successCount = Object.keys(props.results).reduce((total, key) => {\r\n        if (props.results[key] === 'success') {\r\n            total++\r\n        }\r\n        return total\r\n    }, 0)\r\n    return (\r\n        <div className={classes.FinishedQuiz}>\r\n            <h1>Ok. That's all.</h1>\r\n            {props.quiz.map((quizItem, index) => {\r\n                const cls = [\r\n                    props.results[quizItem.id] === \"error\" ? classes.error : classes.success\r\n                ]\r\n                return (\r\n                    <ul key={index} className={cls.join(' ')}>{index + 1 + '. '}{quizItem.question}</ul>\r\n                )\r\n            })}\r\n            <p>Correct answers: {successCount} from {props.quiz.length}</p>\r\n            <div>\r\n                <Button onClick={props.onRetry} type=\"primary\">Retry</Button>\r\n                <Link to='/'>\r\n                    <Button type=\"success\">To Quiz List</Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinishedQuiz","import React from 'react'\r\nimport classes from './Loader.module.css'\r\n\r\nconst Loader = (props) => (\r\n    <div className = {classes.center}>\r\n        <div className={classes.Loader}>\r\n            <div />\r\n            <div />\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Loader","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://reactquiz-ae327.firebaseio.com/\"\r\n})\r\n","import Axios from \"./../../Axios/Axios-quiz\"\r\nimport {FETCH_QUIZES_START, \r\n    FETCH_QUIZES_SUCCESS, \r\n    FETCH_QUIZES_ERROR, \r\n    FETCH_QUIZ_SUCCESS, \r\n    QUIZ_SET_STATE,\r\n    FINISH_QUIZ,\r\n    QUIZ_NEXT_QUESTION,\r\n    RETRY_QUIZ} from \"./ActionTypes\"\r\n\r\nexport function fetchQuizes() {\r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart())\r\n        try {\r\n            const response = await Axios.get(\"quizes.json\")\r\n            const quizes = []\r\n            Object.keys(response.data).forEach((key, index) => {\r\n                quizes.push({\r\n                    id: key,\r\n                    name: `Quiz #${index + 1}`\r\n                })\r\n            })\r\n            dispatch(fetchQuizesSuccess(quizes))\r\n        } catch (e) {\r\n            dispatch(fetchQuizesError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchQuizById(quizId) {\r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart())\r\n        try {\r\n            const response = await Axios.get(`quizes/${quizId}.json`)\r\n            const quiz = response.data\r\n            dispatch(fetchQuizSuccess(quiz))\r\n        } catch (e) {\r\n            dispatch(fetchQuizesError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) {\r\n    return {\r\n        type: FETCH_QUIZ_SUCCESS,\r\n        quiz\r\n    }\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n    return {\r\n        type: FETCH_QUIZES_START\r\n    }\r\n}\r\n\r\nexport function fetchQuizesSuccess(quizes) {\r\n    return {\r\n        type: FETCH_QUIZES_SUCCESS,\r\n        quizes\r\n    }\r\n}\r\n\r\nexport function fetchQuizesError(e) {\r\n    return {\r\n        type: FETCH_QUIZES_ERROR,\r\n        error: e\r\n    }\r\n}\r\n\r\n// QUIZ.JS\r\nexport function quizSetState(answerState, results) {\r\n    return {\r\n        type: QUIZ_SET_STATE,\r\n        answerState,\r\n        results\r\n    }\r\n}\r\nexport function finishQuiz() {\r\n    return {\r\n        type: FINISH_QUIZ\r\n    }\r\n}\r\nexport function quizNextQuestion(activeQuestionNumber) {\r\n    return {\r\n        type: QUIZ_NEXT_QUESTION,\r\n        activeQuestionNumber\r\n    }\r\n}\r\nexport function isQuizFinished(state) {\r\n    return state.activeQuestion + 1 === state.quiz.length\r\n}\r\n\r\nexport function questionSwitcher(state) {\r\n    return (dispatch) => {\r\n        const timeout = window.setTimeout(() => {\r\n            if (isQuizFinished(state)) {\r\n                dispatch(finishQuiz())\r\n            } else {\r\n                dispatch(quizNextQuestion(state.activeQuestion + 1))\r\n            }\r\n            window.clearTimeout(timeout)\r\n        }, 500)\r\n    }\r\n}\r\n\r\nexport function quizAnswerClick(answerId) {\r\n    return (dispatch, getState) => {\r\n        const state = getState().quiz\r\n        if (state.answerState) {\r\n            const key = Object.keys(state.answerState)[0]\r\n            if (state.answerState[key] === 'success') {\r\n                return\r\n            }\r\n        }\r\n        const question = state.quiz[state.activeQuestion]\r\n        const results = state.results\r\n\r\n        if (question.correctAnswerId === answerId) {\r\n            if (!results[question.id]) {\r\n                results[question.id] = 'success'\r\n            }\r\n            dispatch(quizSetState({[answerId]: 'success'}, results))\r\n            dispatch(questionSwitcher(state))\r\n\r\n        } else {\r\n            results[question.id] = 'error'\r\n            dispatch(quizSetState({[answerId]: 'error'}, results))\r\n            dispatch(questionSwitcher(state))\r\n        }\r\n    }\r\n}\r\n\r\nexport function retryQuiz() {\r\n    return {\r\n        type: RETRY_QUIZ\r\n    }\r\n}","export const FETCH_QUIZES_START = \"FETCH_QUIZES_START\"\r\nexport const FETCH_QUIZES_SUCCESS = \"FETCH_QUIZES_SUCCESS\"\r\nexport const FETCH_QUIZES_ERROR = \"FETCH_QUIZES_ERROR\"\r\nexport const FETCH_QUIZ_SUCCESS = \"FETCH_QUIZ_SUCCESS\"\r\n\r\nexport const QUIZ_SET_STATE = \"QUIZ_SET_STATE\"\r\nexport const FINISH_QUIZ = \"FINISH_QUIZ\"\r\nexport const QUIZ_NEXT_QUESTION = \"QUIZ_NEXT_QUESTION\"\r\nexport const RETRY_QUIZ = \"RETRY_QUIZ\"\r\n\r\nexport const CREATE_QUIZ_QUESTION = \"CREATE_QUIZ_QUESTION\"\r\nexport const RESET_QUIZ_CREATION = \"RESET_QUIZ_CREATION\"\r\n\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\"\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\"","import React from 'react'\r\nimport classes from './Quiz.module.css'\r\nimport ActiveQuiz from '../../Components/ActiveQuiz/ActiveQuiz'\r\nimport FinishedQuiz from '../../Components/FinishedQuiz/FinishedQuiz'\r\nimport Loader from '../../Components/UI/Loader/Loader'\r\nimport { connect } from 'react-redux'\r\nimport { fetchQuizById, quizAnswerClick, retryQuiz } from '../../Store/Actions/QuizActionCreators'\r\n\r\nclass Quiz extends React.Component {\r\n    async componentDidMount() {\r\n        this.props.fetchQuizById(this.props.match.params.id)\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.retryQuiz()\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={classes.Quiz}>\r\n                <div className={classes.QuizWrapper}>\r\n                    {\r\n                        this.props.loading || !this.props.quiz\r\n                            ? <Loader />\r\n                            : this.props.isFinished\r\n                                ? <FinishedQuiz\r\n                                    results={this.props.results}\r\n                                    quiz={this.props.quiz}\r\n                                    onRetry={this.props.retryQuiz} />\r\n                                : <ActiveQuiz\r\n                                    answers={this.props.quiz[this.props.activeQuestion].answers}\r\n                                    question={this.props.quiz[this.props.activeQuestion].question}\r\n                                    onAnswerClick={this.props.quizAnswerClick}\r\n                                    quizLength={this.props.quiz.length}\r\n                                    answerNumber={this.props.activeQuestion + 1}\r\n                                    state={this.props.answerState} />\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.quiz.loading,\r\n        results: state.quiz.results,\r\n        isFinished: state.quiz.isFinished,\r\n        activeQuestion: state.quiz.activeQuestion,\r\n        answerState: state.quiz.answerState,\r\n        quiz: state.quiz.quiz\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchQuizById: (id) => dispatch(fetchQuizById(id)),\r\n        quizAnswerClick: (answerId) => dispatch(quizAnswerClick(answerId)),\r\n        retryQuiz: () => dispatch(retryQuiz())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)","export function createControl(config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n        value: ''\r\n    }\r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n    if(!validation) {\r\n        return true\r\n    }\r\n    let isValid = true\r\n    if(validation.required){\r\n        isValid = value.trim() !== '' && isValid\r\n    }\r\n    return isValid\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n    let isFormValid = true\r\n    Object.keys(formControls).forEach(name => {\r\n        isFormValid = formControls[name].valid && isFormValid\r\n    })\r\n    return isFormValid\r\n}","import React from 'react'\r\nimport classes from './Input.module.css'\r\n\r\nconst Input = (props) => {\r\n\r\n    function isInvalid({valid, touched, shouldValidate}) {\r\n        return !valid && shouldValidate && touched\r\n    } \r\n\r\n    const inputType = props.type || 'text'\r\n    const htmlFor = `${inputType}-${Math.random()}`\r\n    const cls = [classes.Input]\r\n\r\n    if(isInvalid(props)) {\r\n        cls.push(classes.invalid)\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <input type={inputType} id={htmlFor} value={props.value} autoComplete=\"off\"\r\n                onChange={props.onChange} />\r\n            { isInvalid(props)\r\n                ? <span>{props.errorMessage || \"Incorrect login or password\"}</span>\r\n                : null }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nimport classes from './Select.module.css'\r\n\r\nexport const Select = (props) => {\r\n    const htmlFor = `${props.label}-${Math.random()}`\r\n    return (\r\n        <div className = {classes.Select}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <select id={htmlFor}\r\n                label={props.label}\r\n                value={props.value}\r\n                onChange={props.onChange}>\r\n                    {props.options.map((option, index) => {\r\n                        return (\r\n                            <option value = {option.value}\r\n                                key={option.value + index}>\r\n                                {option.text}\r\n                            </option>\r\n                        )\r\n                    })}\r\n                </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const QuestionList = (props) => {\r\n    debugger\r\n    const htmlFor = `${props.label}-${Math.random()}`\r\n    return (\r\n        <div className = {classes.Select}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <select id={htmlFor}\r\n                label={props.label}\r\n                value={props.value}\r\n                >\r\n                    {props.options.map((questionItem, index) => {\r\n                        return (\r\n                            <option key={questionItem.value + index}>\r\n                                {`1. ${questionItem.question}`}\r\n                            </option>\r\n                        )\r\n                    })}\r\n                </select>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport classes from './QuizCreator.module.css'\r\nimport Button from '../../Components/UI/Button/Button'\r\nimport { createControl, validate, validateForm } from '../../Form/FormFrameWork'\r\nimport Input from '../../Components/UI/Input/Input'\r\nimport { Select, QuestionList } from '../../Components/UI/Select/Select'\r\nimport { connect } from 'react-redux'\r\nimport { createQuizQuestion, finishCreateQuiz, resetQuizCreation } from '../../Store/Actions/QuizCreatorActionCreator'\r\n\r\nfunction createOptionControl(number) {\r\n    return createControl(\r\n        {\r\n            label: `Answer ${number}`,\r\n            errorMessage: 'Field is required',\r\n            id: number\r\n        },\r\n        { required: true })\r\n}\r\nfunction createFormControls() {\r\n    return { \r\n        // quizName: createControl({\r\n        //     label: 'Create a quiz name',\r\n        //     errorMessage: 'Please enter a quiz name'\r\n        // }, { required: true }),\r\n        question: createControl({\r\n            label: 'Type a question',\r\n            errorMessage: 'Please type a question'\r\n        }, { required: true }),\r\n        option1: createOptionControl(1),\r\n        option2: createOptionControl(2),\r\n        option3: createOptionControl(3),\r\n        option4: createOptionControl(4)\r\n    }\r\n}\r\nclass QuizCreator extends React.Component {\r\n    state = {\r\n        formControls: createFormControls(),\r\n        isFormValid: false,\r\n        correctAnswerId: 1\r\n    }\r\n    submitHandler = (event) => {\r\n        event.preventDefault()\r\n    }\r\n    addQuestionHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        const { question, option1, option2, option3, option4 } = this.state.formControls\r\n\r\n        const questionItem = {\r\n            question: question.value,\r\n            id: this.props.quiz.length + 1,\r\n            correctAnswerId: this.state.correctAnswerId,\r\n            answers: [\r\n                { text: option1.value, id: option1.id },\r\n                { text: option2.value, id: option2.id },\r\n                { text: option3.value, id: option3.id },\r\n                { text: option4.value, id: option4.id }\r\n            ]\r\n        }\r\n        this.props.createQuizQuestion(questionItem)\r\n        this.setState({\r\n            formControls: createFormControls(),\r\n            isFormValid: false,\r\n            correctAnswerId: 1\r\n        })\r\n    }\r\n    createQuizHandler = (event) => {\r\n        event.preventDefault()  \r\n            this.setState({\r\n                formControls: createFormControls(),\r\n                isFormValid: false,\r\n                correctAnswerId: 1\r\n            })\r\n        this.props.finishCreateQuiz()\r\n    }\r\n    onChangeHandler = (value, formItem) => {\r\n        const formControls = { ...this.state.formControls }\r\n        const form = { ...formControls[formItem] }\r\n        form.value = value\r\n        form.touched = true\r\n        form.valid = validate(form.value, form.validation)\r\n        formControls[formItem] = form\r\n        let isFormValid = true\r\n        Object.keys(formControls).forEach(name => {\r\n            isFormValid = formControls[name].valid && isFormValid\r\n        })\r\n        this.setState({\r\n            formControls,\r\n            isFormValid: validateForm(formControls)\r\n        })\r\n    }\r\n    selectChangeHandler = (event) => {\r\n        this.setState({\r\n            correctAnswerId: +event.target.value\r\n        })\r\n    }\r\n    onEraseHandler = (event) => {\r\n        event.preventDefault()\r\n        this.props.resetQuizCreation()\r\n        this.setState({\r\n            formControls: createFormControls(),\r\n            isFormValid: false,\r\n            correctAnswerId: 1\r\n        })\r\n    }\r\n    renderInputs() {\r\n        return Object.keys(this.state.formControls).map(\r\n            (inputItem, index) => {\r\n                const control = this.state.formControls[inputItem]\r\n                return (\r\n                    <React.Fragment key={`Fragment${index}`}>\r\n                        <Input key={inputItem + index}\r\n                            value={control.value}\r\n                            label={control.label}\r\n                            valid={control.valid}\r\n                            touched={control.touched}\r\n                            errorMessage={control.errorMessage}\r\n                            shouldValidate={!!control.validation}\r\n                            onChange={(event) => this.onChangeHandler(event.target.value, inputItem)}\r\n                        />\r\n                        {index === 1 ? <hr /> : null}\r\n                    </React.Fragment>\r\n                )\r\n            })\r\n    }\r\n    questionButtonLabel() {\r\n        if (this.props.quiz.length === 0) {\r\n            return \"Create a Quiz\"\r\n        }\r\n        if (this.props.quiz.length === 1) {\r\n            return \"Create a Quiz with 1 question\"\r\n        }\r\n        return `Create a Quiz with ${this.state.quiz.length} questions`\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={classes.QuizCreator}>\r\n                <div>\r\n                    <h1>Quiz Creator</h1>\r\n                    <form onSubmit={this.submitHandle}>\r\n                        {this.renderInputs()}\r\n                        {}\r\n                        <Select label=\"Choose a correct answer\"\r\n                            value={this.state.correctAnswerId}\r\n                            onChange={this.selectChangeHandler}\r\n                            options={[\r\n                                { text: this.state.formControls.option1.value, value: 1 },\r\n                                { text: this.state.formControls.option2.value, value: 2 },\r\n                                { text: this.state.formControls.option3.value, value: 3 },\r\n                                { text: this.state.formControls.option4.value, value: 4 }\r\n                            ]} />\r\n                        <Button type='primary' onClick={this.addQuestionHandler}\r\n                            disabled={!this.state.isFormValid}>Add Question</Button>\r\n                        <Button type='success' onClick={this.createQuizHandler}\r\n                            disabled={this.props.quiz.length === 0}>{this.questionButtonLabel()}</Button>\r\n                        {this.props.quiz.length === 0\r\n                            ? null\r\n                            : <>\r\n                                <hr />\r\n                                <QuestionList label=\"List of questions\" value=\"text\" options={this.props.quiz} />\r\n                                <Button type='primary' onClick={this.onEraseHandler}>Erase questions</Button>\r\n                            </>}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        quiz: state.quizCreator.quiz\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createQuizQuestion: (item) => dispatch(createQuizQuestion(item)),\r\n        finishCreateQuiz: () => dispatch(finishCreateQuiz()),\r\n        resetQuizCreation: () => dispatch(resetQuizCreation())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator)","import { CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION } from \"./ActionTypes\";\r\nimport axios from '../../Axios/Axios-quiz'\r\n\r\nexport function createQuizQuestion(item) {\r\n    return {\r\n        type: CREATE_QUIZ_QUESTION,\r\n        item\r\n    }\r\n}\r\n\r\nexport function finishCreateQuiz() {\r\n    return async (dispatch, getState) => {\r\n        await axios.post(\"quizes.json\", getState().quizCreator.quiz)\r\n        dispatch(resetQuizCreation())\r\n    }\r\n}\r\n\r\nexport function resetQuizCreation() {\r\n    return {\r\n        type: RESET_QUIZ_CREATION\r\n    }\r\n}","import React from 'react'\r\nimport classes from './QuizList.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Loader from '../../Components/UI/Loader/Loader'\r\nimport { connect } from 'react-redux'\r\nimport { fetchQuizes } from '../../Store/Actions/QuizActionCreators'\r\n\r\nclass QuizList extends React.Component {\r\n    renderQuizes() {\r\n        return (\r\n            this.props.quizes.length === 0\r\n                ? <h1>No created quizes</h1>\r\n                : this.props.quizes.map((quiz) => {\r\n                    return (\r\n                        <li key={quiz.id}>\r\n                            <NavLink\r\n                                to={'/quiz/' + quiz.id} >{quiz.name}</NavLink>\r\n                        </li>\r\n                    )\r\n                })\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchQuizes()\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={classes.QuizList}>\r\n                <div>\r\n                    <h1>Quiz List</h1>\r\n                    {\r\n                        this.props.loading && this.props.quizes.length !== 0\r\n                            ? <Loader />\r\n                            : <ul>\r\n                                {this.renderQuizes()}\r\n                            </ul>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quizes: state.quiz.quizes,\r\n        loading: state.quiz.loading\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizes: () => dispatch(fetchQuizes())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)","import axios from 'axios'\r\nimport { AUTH_SUCCESS, AUTH_LOGOUT } from './ActionTypes'\r\n\r\nexport function auth(email, password, isLogin) {\r\n    return async dispatch => {\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        }\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDzf8ZCU3Z_WZrGAmz2Hc0793MjVlCsVWI'\r\n        if (isLogin) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDzf8ZCU3Z_WZrGAmz2Hc0793MjVlCsVWI'\r\n        }\r\n        const response = await axios.post(url, authData)\r\n\r\n        const data = response.data\r\n\r\n        const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\r\n\r\n        localStorage.setItem('token', data.idToken)\r\n        localStorage.setItem('userId', data.localId)\r\n        localStorage.setItem('expirationDate', expirationDate)\r\n\r\n        dispatch(authSuccess(data.idToken))\r\n        dispatch(autoLogout(data.expiresIn))\r\n    }\r\n}\r\n\r\nexport function authSuccess(token) {\r\n    return {\r\n        type: AUTH_SUCCESS,\r\n        token\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('userId')\r\n    localStorage.removeItem('expirationDate')\r\n    return {\r\n        type: AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport function autoLogin() {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token')\r\n        if (!token) {\r\n            dispatch(logout())\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n            if (expirationDate <= new Date) {\r\n                dispatch(logout())\r\n            } else {\r\n                dispatch(authSuccess(token))\r\n                dispatch(autoLogout((expirationDate.getTime() - new Date().getTime) / 1000))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function autoLogout(time) {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        }, time * 1000)\r\n    }\r\n}","import React from 'react'\r\nimport classes from './Auth.module.css'\r\nimport Button from '../../Components/UI/Button/Button'\r\nimport Input from '../../Components/UI/Input/Input'\r\nimport { connect } from 'react-redux'\r\nimport { auth } from '../../Store/Actions/AuthActionCreator'\r\n\r\nfunction validateEmail(email) {\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\nclass Auth extends React.Component {\r\n\r\n    state = {\r\n        isFormValid: false,\r\n        formControls: {\r\n            email: {\r\n                value: \"\",\r\n                type: \"email\",\r\n                label: \"Email\",\r\n                errorMessage: \"Enter a valid email\",\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                }\r\n            },\r\n            password: {\r\n                value: \"\",\r\n                type: \"password\",\r\n                label: \"Password\",\r\n                errorMessage: \"Enter a password\",\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                }\r\n            }\r\n        }\r\n    }\r\n    validateControl(value, validation) {\r\n        if(!validation) {\r\n            return true\r\n        }\r\n        let isValid = true\r\n        if(validation.required) {\r\n            isValid = value.trim() !== '' && isValid\r\n        }\r\n        if(validation.email) {\r\n            isValid = validateEmail(value) && isValid\r\n        }\r\n        if(validation.minLength) {\r\n            isValid = value.length >= validation.minLength && isValid\r\n        }\r\n        return isValid\r\n    }\r\n    onChangeHandler = (event, formItem) => {\r\n        const formControls = {...this.state.formControls}\r\n        const form = {...formControls[formItem]}\r\n        form.value = event.target.value\r\n        form.touched = true\r\n        form.valid = this.validateControl(form.value, form.validation)\r\n        formControls[formItem] = form\r\n        let isFormValid = true\r\n        Object.keys(formControls).forEach(name => {\r\n            isFormValid = formControls[name].valid && isFormValid\r\n        })\r\n        this.setState({\r\n            formControls, isFormValid\r\n        })\r\n    }\r\n\r\n    renderInputs() {\r\n        return Object.keys(this.state.formControls).map(\r\n            (formItem, index) => {\r\n            const form = this.state.formControls[formItem]\r\n            return (\r\n                <Input key = {formItem + index}\r\n                    value = {form.value}\r\n                    type = {form.type} \r\n                    label = {form.label}\r\n                    valid = {form.valid}\r\n                    touched = {form.touched} \r\n                    errorMessage = {form.errorMessage} \r\n                    shouldValidate = {!!form.validation} \r\n                    onChange = {(event) => this.onChangeHandler(event, formItem)} \r\n                     />\r\n            )\r\n        })\r\n    }\r\n    \r\n    loginHandler = () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            true\r\n        )\r\n    }\r\n    registerHandler = () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            false\r\n        )\r\n    }\r\n    submitHandler = (event) => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Auth}>\r\n                <div>\r\n                    <h1>Sign up</h1>\r\n                    <form onSubmit = {this.submitHandler} className={classes.AuthForm}>\r\n                        {this.renderInputs()}\r\n                        \r\n                        <Button type = \"success\" onClick = {this.loginHandler}\r\n                            disabled = {!this.state.isFormValid}\r\n                            >Sign in</Button>\r\n                        <Button type = \"primary\" onClick = {this.registerHandler}\r\n                            disabled = {!this.state.isFormValid}\r\n                            >Registration</Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(Auth)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../../Store/Actions/AuthActionCreator'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Logout extends React.Component {\r\n    componentDidMount() {\r\n        this.props.logout()\r\n    }\r\n    render() {\r\n        return <Redirect to={\"/\"} />\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        logout: () => dispatch(logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout)","import React from 'react'\nimport Layout from './hoc/Layout/layout'\nimport Quiz from './Containers/Quiz/Quiz'\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\nimport QuizCreator from './Containers/QuizCreator/QuizCreator'\nimport QuizList from './Containers/QuizList/QuizList'\nimport Auth from './Containers/Auth/Auth'\nimport { connect } from 'react-redux'\nimport Logout from './Components/Logout/Logout'\nimport {autoLogin} from './Store/Actions/AuthActionCreator'\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.autoLogin()\n  }\n  render() {\n    let routes = (\n      <Switch>\n        <Route path = \"/auth\" component = {Auth} />\n        <Route path = \"/quiz/:id\" component = {Quiz} />\n        <Route path = \"/\" exact component = {QuizList} />\n        <Redirect to=\"/\" />\n      </Switch>\n    ) \n    if (this.props.isAutheticated) {\n      routes = (\n        <Switch>\n        <Route path = \"/quiz-creator\" component = {QuizCreator} />\n        <Route path = \"/quiz/:id\" component = {Quiz} />\n        <Route path = \"/logout\" component = {Logout} />\n        <Route path = \"/\" exact component = {QuizList} />\n        <Redirect to=\"/\" />\n      </Switch>\n      )\n    }\n  return (\n    <Layout>\n      {routes}\n    </Layout>\n  )\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    isAutheticated: !!state.auth.token\n}}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    autoLogin: () => dispatch(autoLogin())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { FETCH_QUIZES_START, \r\n    FETCH_QUIZES_SUCCESS, \r\n    FETCH_QUIZES_ERROR, \r\n    FETCH_QUIZ_SUCCESS, \r\n    QUIZ_SET_STATE,\r\n    FINISH_QUIZ,\r\n    QUIZ_NEXT_QUESTION,\r\n    RETRY_QUIZ } from \"../Actions/ActionTypes\"\r\n\r\nconst initialState = {\r\n    quizes: [],\r\n    loading: false,\r\n    error: null,\r\n    results: {},\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null,\r\n    quiz: null\r\n}\r\n\r\nexport default function quizReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_QUIZES_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_QUIZES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                quizes: action.quizes\r\n            }\r\n        case FETCH_QUIZES_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        case FETCH_QUIZ_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false, \r\n                quiz: action.quiz\r\n            }\r\n        case QUIZ_SET_STATE:\r\n            return {\r\n                ...state,\r\n                answerState: action.answerState,\r\n                results: action.results\r\n            }\r\n        case FINISH_QUIZ:\r\n            return {\r\n                ...state,\r\n                isFinished: true\r\n            }\r\n        case QUIZ_NEXT_QUESTION: \r\n            return {\r\n                ...state,\r\n                activeQuestion: action.activeQuestionNumber,\r\n                answerState: null\r\n            }\r\n        case RETRY_QUIZ:\r\n            return {\r\n                ...state,\r\n                activeQuestion: 0,\r\n                isFinished: false,\r\n                answerState: null,\r\n                results: {}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION } from \"../Actions/ActionTypes\"\r\n\r\nconst initialState = {\r\n    quiz: []\r\n}\r\n\r\nexport default function quizCreatorReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case CREATE_QUIZ_QUESTION:\r\n            return {\r\n                ...state,\r\n                quiz: [...state.quiz, action.item]\r\n            }\r\n        case RESET_QUIZ_CREATION:\r\n            return {\r\n                ...state,\r\n                quiz: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { AUTH_SUCCESS, AUTH_LOGOUT } from \"../Actions/ActionTypes\"\r\n\r\nconst initialState = {\r\n    token: null\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case AUTH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        case AUTH_LOGOUT:\r\n            return {\r\n                ...state,\r\n                token: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport quizReducer from './QuizReducer'\r\nimport quizCreatorReducer from './QuizCreatorReducer'\r\nimport authReducer from './AuthReducer'\r\n\r\nexport default combineReducers({\r\n    quiz: quizReducer,\r\n    quizCreator: quizCreatorReducer,\r\n    auth: authReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, compose, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './Store/Reducers/rootReducer'\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    }) : compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}